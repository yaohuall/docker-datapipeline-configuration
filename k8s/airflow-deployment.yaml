apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: D:\coding\Projects\test\kompose.exe convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: airflow
  name: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: airflow
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: D:\coding\Projects\test\kompose.exe convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/test: "true"
        io.kompose.service: airflow
    spec:
      containers:
        - env:
            - name: AIRFLOW_CONN_S3_CONN
            - name: AIRFLOW_DATABASE_NAME
              value: postgres
            - name: AIRFLOW_DATABASE_PASSWORD
              value: postgres
            - name: AIRFLOW_DATABASE_USERNAME
              value: postgres
            - name: AIRFLOW_EXECUTOR
              value: CeleryExecutor
            - name: AIRFLOW_FERNET_KEY
              value: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - name: AIRFLOW_LOAD_EXAMPLES
              value: "no"
            - name: AIRFLOW_PASSWORD
              value: test
            - name: AIRFLOW_SECRET_KEY
              value: a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
            - name: AIRFLOW_USERNAME
              value: test
            - name: TZ
              value: Asia/Taipei
          image: docker.io/bitnami/airflow:2
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:8080/admin/
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 20
          name: airflow
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /opt/bitnami/airflow/dags
              name: airflow-claim0
            - mountPath: /opt/bitnami/airflow/data
              name: airflow-claim1
            - mountPath: /bitnami/python/requirements.txt
              name: airflow-claim2
      restartPolicy: Always
      volumes:
        - name: airflow-claim0
          persistentVolumeClaim:
            claimName: airflow-claim0
        - name: airflow-claim1
          persistentVolumeClaim:
            claimName: airflow-claim1
        - name: airflow-claim2
          persistentVolumeClaim:
            claimName: airflow-claim2
status: {}
