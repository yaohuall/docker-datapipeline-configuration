apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: D:\coding\Projects\test\kompose.exe convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.network/test: "true"
    io.kompose.service: airflow-worker
  name: airflow-worker
spec:
  containers:
    - env:
        - name: AIRFLOW_CONN_S3_CONN
        - name: AIRFLOW_DATABASE_NAME
          value: postgres
        - name: AIRFLOW_DATABASE_PASSWORD
          value: postgres
        - name: AIRFLOW_DATABASE_USERNAME
          value: postgres
        - name: AIRFLOW_EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW_FERNET_KEY
          value: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
        - name: AIRFLOW_LOAD_EXAMPLES
          value: "no"
        - name: AIRFLOW_SECRET_KEY
          value: a25mQ1FHTUh3MnFRSk5KMEIyVVU2YmN0VGRyYTVXY08=
        - name: AIRFLOW_WEBSERVER_HOST
          value: airflow
        - name: TZ
          value: Asia/Taipei
      image: docker.io/bitnami/airflow-worker:2
      name: airflow-worker
      resources: {}
      volumeMounts:
        - mountPath: /opt/bitnami/airflow/dags
          name: airflow-worker-claim0
        - mountPath: /opt/bitnami/airflow/data
          name: airflow-worker-claim1
        - mountPath: /bitnami/python/requirements.txt
          name: airflow-worker-claim2
  restartPolicy: OnFailure
  volumes:
    - name: airflow-worker-claim0
      persistentVolumeClaim:
        claimName: airflow-worker-claim0
    - name: airflow-worker-claim1
      persistentVolumeClaim:
        claimName: airflow-worker-claim1
    - name: airflow-worker-claim2
      persistentVolumeClaim:
        claimName: airflow-worker-claim2
status: {}
